(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
"use strict";!function(){var e=void 0,t=function(e){var t=n(e);return t&&t.params?t.params.id:""},n=function(e){var t=document.createElement("a");return t.href=e,{source:e,protocol:t.protocol.replace(":",""),host:t.hostname,port:t.port,query:t.search,params:function(){for(var e,n={},a=t.search.replace(/^\?/,"").split("&"),o=a.length,r=0;o>r;r++)a[r]&&(e=a[r].split("="),n[e[0]]=e[1]);return n}(),file:(t.pathname.match(/\/([^\/?#]+)$/i)||[,""])[1],hash:t.hash.replace("#",""),path:t.pathname.replace(/^([^\/])/,"/$1"),relative:(t.href.match(/tp:\/\/[^\/]+(.+)/)||[,""])[1],segments:t.pathname.replace(/^\//,"").split("/")}},a=function(e){return $.simplyToast(e,"danger")},o=function(e){return $.simplyToast(e,"success")},r=n(window.location.url),c=!1,i=$("#tpls"),s=$("#sources"),l=$("#btn-regen"),u=$("#runner-output"),d=$("#generator-featured, #generator-list"),p=$("#generator"),f=$("#generator-name"),h=$("#generator-desc"),m=void 0,v=new Generador({host:"//"+r.host+(r.port?":"+r.port:"")}),g=function(e){return e.match(/;@tpl\|/m)?e:";@tpl|main\n"+e},b=function(){var e=g(i.val());m=v.parseString(""+e+s.val()).then(function(){c=!0,w()})},w=function(){c&&u.empty().append(v.toHtml(v.generate()))},k=function(e){o("Guardado con exito"),console.log("RES",e),setTimeout(function(){window.location.href=e.link+"?edit=1"},500)},E=function(e){var t="NEW"===e?"":e,n=f.val().trim(),r=h.val().trim();if(!n||!r)return void a("Falta nombre o descripcion");var c={name:n,desc:r,data:{tpls:g(i.val()),tables:s.val()}};return t?v.remotes.update(t,c).then(function(e){o("Guardado con exito")})["catch"](function(e){a(e.message)}):void v.remotes.create(c).then(k)["catch"](function(e){a(e.message)})},y=function(e){var t=f.val().trim()+" - copia",n=h.val().trim();return t&&n?void v.remotes.create({name:t,desc:n,parent:e,data:{tpls:g(i.val()),tables:s.val()}}).then(k)["catch"](function(e){a(e.message)}):void a("Falta nombre o descripcion")},C=function(){$("#save").removeClass("disabled").off("click").on("click",function(){return E(e)}),"NEW"!==e&&$("#fork").removeClass("disabled").off("click").on("click",function(){return y(e)})},N=function(){$twitterShare.data("")},S=function(e){return p.removeClass("hide"),i.on("change",b),f.on("change",N),s.on("change",b),l.on("click",w),"NEW"===e?void b():void v.remotes.load(e).then(function(t){return t||Promise.reject("No hay datos para el identificador "+e)}).then(function(e){f.val(e.name),h.val(e.desc),i.val(g(e.data.tpls)),s.val(e.data.tables),b(),w()})["catch"](function(t){a("No hay datos para el identificador "+e)})};$(function(){if(e=GENERATOR_SOURCE_ID||t(window.location.href),!e)return void d.removeClass("hide");S(e);var n=new Clipboard("#btn-copy");n.on("success",function(e){o("Copiado al portapapeles"),e.clearSelection()}),v.getTokenFromAuth().then(function(e){C()})["catch"](function(e){})})}();

},{}]},{},[1])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
